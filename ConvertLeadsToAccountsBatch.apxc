global class ConvertLeadsToAccountsBatch implements Database.Batchable<SObject>, Database.AllowsCallouts {
    global Database.QueryLocator start(Database.BatchableContext BC) {
        return Database.getQueryLocator('SELECT Id, FirstName, LastName, Company FROM Lead');
    }

 

    global void execute(Database.BatchableContext BC, List<Lead> scope) {
        List<Account> accountsToInsert = new List<Account>();

 

        for (Lead lead : scope) {
            Account newAccount = new Account(Name = lead.Company);
            accountsToInsert.add(newAccount);
        }

 

        insert accountsToInsert;
    }

 

    global void finish(Database.BatchableContext BC) {
        sendEmailNotification();
    }

 

    private void sendEmailNotification() {
        Messaging.SingleEmailMessage email = new Messaging.SingleEmailMessage();
        email.setToAddresses(new List<String>{ 'apnavansh@gmail.com' }); 
        email.setSubject('Batch Job Completed');
        email.setPlainTextBody('The batch job to convert leads to accounts has been completed successfully.');

 

        Messaging.SendEmailResult[] results = Messaging.sendEmail(new Messaging.SingleEmailMessage[]{ email });
        if (results[0].isSuccess()) {
            System.debug('Email sent successfully.');
        } else {
            System.debug('Email sending failed: ' + results[0].getErrors()[0].getMessage());
        }
    }
}